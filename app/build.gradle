plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.appdistribution'
}

android {
    signingConfigs {
        debug {
            storeFile file(DEBUG_STORE_FILE)
            storePassword DEBUG_STORE_PASSWORD
            keyAlias DEBUG_KEY_ALIAS
            keyPassword DEBUG_KEY_PASSWORD
        }
        release {
            storeFile file(String.valueOf((System.getenv("ANDROID_KEYSTORE_PATH"))))
            storePassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PASSWORD")
            keyAlias System.getenv("BITRISEIO_ANDROID_KEYSTORE_ALIAS")
            keyPassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
        }
    }
    compileSdk 32

    defaultConfig {
        applicationId "com.mabrouk.dalilmuslim"
        minSdk 24
        targetSdk 32
        versionCode 3
        versionName "1.0.$versionCode"
        archivesBaseName = "dalilMuslim-$versionName"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debug
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        releaseDebug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'META-INF/AL2.0', 'META-INF/LGPL2.1', 'META-INF/*.kotlin_module']
        }
    }
    lint {
        abortOnError false
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
    namespace 'com.mabrouk.dalilmuslim'

}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    //localization
    implementation 'com.akexorcist:localization:1.2.10'
    api project(":core")
    api project(":azkar_feature")
    api project(":history_feature")
    api project(":hadith_feature")
    api project(":quran_feature")
    api project(":radio_quran_feature")
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.google.firebase:firebase-config:21.0.2'
    implementation 'com.google.firebase:firebase-analytics-ktx:21.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
   // implementation 'np.com.susanthapa:curved_bottom_navigation:0.6.5'
    // hilt
    implementation("com.google.dagger:hilt-android:2.40.1")
    kapt("com.google.dagger:hilt-android-compiler:2.40.1")
    implementation "androidx.navigation:navigation-ui-ktx:2.4.2"
    implementation "androidx.navigation:navigation-fragment-ktx:2.4.2"
    implementation 'androidx.hilt:hilt-work:1.0.0'

    //work manger
    implementation "androidx.work:work-runtime-ktx:2.7.1"
    androidTestImplementation "androidx.work:work-testing:2.7.1"

    implementation 'com.google.firebase:firebase-crashlytics:18.2.11'

    //flipper
    implementation "com.facebook.flipper:flipper:$flipperVersion"
    implementation "com.facebook.soloader:soloader:$soLoaderVersion"
    implementation "com.facebook.flipper:flipper-network-plugin:$flipperVersion"
}

kapt {
    correctErrorTypes = true
}
hilt {
    enableAggregatingTask = true
}