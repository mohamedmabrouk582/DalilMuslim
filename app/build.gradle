plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.appdistribution'
    id "org.sonarqube" version "3.4.0.2513"
    id 'com.guardsquare.appsweep' version "1.4.0"
}

android {
    signingConfigs {
        debug {
            storeFile file(DEBUG_STORE_FILE)
            storePassword DEBUG_STORE_PASSWORD
            keyAlias DEBUG_KEY_ALIAS
            keyPassword DEBUG_KEY_PASSWORD
        }
        release {
            storeFile file(String.valueOf((System.getenv("ANDROID_KEYSTORE_PATH"))))
            storePassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PASSWORD")
            keyAlias System.getenv("BITRISEIO_ANDROID_KEYSTORE_ALIAS")
            keyPassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
        }
    }
    compileSdk 33

    defaultConfig {
        applicationId "com.mabrouk.dalilmuslim"
        minSdk 26
        targetSdk 33
        versionCode 5
        versionName "1.2.$versionCode"
        archivesBaseName = "dalilMuslim-$versionName"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debug
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        releaseDebug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        benchmark {
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
            debuggable false
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'META-INF/AL2.0', 'META-INF/LGPL2.1', 'META-INF/*.kotlin_module']
        }
    }
    lint {
        abortOnError false
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
    namespace 'com.mabrouk.dalilmuslim'

}

dependencies {
    implementation libs.androidCore
    //localization
    implementation 'com.akexorcist:localization:1.2.10'
    api project(":core")
    api project(":azkar_feature")
    api project(":history_feature")
    api project(":hadith_feature")
    api project(":quran_feature")
    api project(":radio_quran_feature")
    api project(":prayerTime")
    implementation libs.appcompat
    implementation libs.constraintlayout
    implementation libs.materialDesgin
    implementation libs.firebase
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    // hilt
    implementation libs.daggerHilt
    kapt libs.daggerHiltKapt
    implementation libs.navigation

    //permission
    implementation libs.permission


    //work manger
    implementation libs.workManager
    androidTestImplementation libs.workManagerTest

    implementation libs.firebaseCrashlytics

    //flipper
    implementation libs.flipper

    implementation 'net.danlew:android.joda:2.12.1.1'

}

kapt {
    correctErrorTypes = true
}
hilt {
    enableAggregatingTask = true
}

sonarqube {
    properties {
        property "sonar.projectKey", "mohamedmabrouk582_DalilMuslim"
        property "sonar.organization", "mohamedmabrouk582"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}